//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.amap_map_fluttify.AmapMapFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler0 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // getter
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::get_MIN_OFFSET_DISTANCE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.MIN_OFFSET_DISTANCE;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.MapsInitializer::get_sdcardDir", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.MapsInitializer ref = (com.amap.api.maps.MapsInitializer) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.sdcardDir;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_nearLeft", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLng __result__ = ref.nearLeft;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_nearRight", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLng __result__ = ref.nearRight;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_farLeft", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLng __result__ = ref.farLeft;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_farRight", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLng __result__ = ref.farRight;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_latLngBounds", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLngBounds __result__ = ref.latLngBounds;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_RED", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_RED;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_ORANGE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_ORANGE;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_YELLOW", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_YELLOW;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_GREEN", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_GREEN;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_CYAN", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_CYAN;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_AZURE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_AZURE;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_BLUE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_BLUE;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_VIOLET", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_VIOLET;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_MAGENTA", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_MAGENTA;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_ROSE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.HUE_ROSE;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.Tile::get_width", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.Tile ref = (com.amap.api.maps.model.Tile) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.width;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.Tile::get_height", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.Tile ref = (com.amap.api.maps.model.Tile) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.height;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.Tile::get_data", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.Tile ref = (com.amap.api.maps.model.Tile) getHEAP().get((int) __args__.get("refId"));
            
               byte[] __result__ = ref.data;
            
               byte[] jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.GroundOverlayOptions::get_NO_DIMENSION", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.GroundOverlayOptions ref = (com.amap.api.maps.model.GroundOverlayOptions) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.NO_DIMENSION;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_target", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLng __result__ = ref.target;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_zoom", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.zoom;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_tilt", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.tilt;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_bearing", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
               float __result__ = ref.bearing;
            
               float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_isAbroad", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.isAbroad;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.HeatmapTileProvider::get_DEFAULT_GRADIENT", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.HeatmapTileProvider ref = (com.amap.api.maps.model.HeatmapTileProvider) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.Gradient __result__ = ref.DEFAULT_GRADIENT;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.LatLngBounds::get_southwest", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.LatLngBounds ref = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLng __result__ = ref.southwest;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.LatLngBounds::get_northeast", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.LatLngBounds ref = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLng __result__ = ref.northeast;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.LatLng::get_latitude", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.LatLng ref = (com.amap.api.maps.model.LatLng) getHEAP().get((int) __args__.get("refId"));
            
               double __result__ = ref.latitude;
            
               double jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.LatLng::get_longitude", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.LatLng ref = (com.amap.api.maps.model.LatLng) getHEAP().get((int) __args__.get("refId"));
            
               double __result__ = ref.longitude;
            
               double jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_offsetX", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.offsetX;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_offsetY", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.offsetY;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_minX", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.minX;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_maxX", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.maxX;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_minY", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.minY;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_maxY", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.maxY;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.WeightedLatLng::get_intensity", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.WeightedLatLng ref = (com.amap.api.maps.model.WeightedLatLng) getHEAP().get((int) __args__.get("refId"));
            
               double __result__ = ref.intensity;
            
               double jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.WeightedLatLng::get_latLng", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.WeightedLatLng ref = (com.amap.api.maps.model.WeightedLatLng) getHEAP().get((int) __args__.get("refId"));
            
               com.amap.api.maps.model.LatLng __result__ = ref.latLng;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_activeFloorName", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.activeFloorName;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_activeFloorIndex", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.activeFloorIndex;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_poiid", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.poiid;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_floor_indexs", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
               int[] __result__ = ref.floor_indexs;
            
               int[] jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_floor_names", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
               String[] __result__ = ref.floor_names;
            
               List<String> jsonableResult = new ArrayList<String>(java.util.Arrays.asList(__result__));
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::get_MIN_OFFSET_DISTANCE_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.MIN_OFFSET_DISTANCE;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.MapsInitializer::get_sdcardDir_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.MapsInitializer ref = (com.amap.api.maps.MapsInitializer) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.sdcardDir;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_nearLeft_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLng __result__ = ref.nearLeft;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_nearRight_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLng __result__ = ref.nearRight;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_farLeft_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLng __result__ = ref.farLeft;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_farRight_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLng __result__ = ref.farRight;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.VisibleRegion::get_latLngBounds_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.VisibleRegion ref = (com.amap.api.maps.model.VisibleRegion) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLngBounds __result__ = ref.latLngBounds;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_RED_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_RED;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_ORANGE_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_ORANGE;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_YELLOW_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_YELLOW;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_GREEN_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_GREEN;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_CYAN_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_CYAN;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_AZURE_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_AZURE;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_BLUE_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_BLUE;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_VIOLET_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_VIOLET;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_MAGENTA_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_MAGENTA;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.BitmapDescriptorFactory::get_HUE_ROSE_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.BitmapDescriptorFactory ref = (com.amap.api.maps.model.BitmapDescriptorFactory) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.HUE_ROSE;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.Tile::get_width_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.Tile ref = (com.amap.api.maps.model.Tile) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.width;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.Tile::get_height_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.Tile ref = (com.amap.api.maps.model.Tile) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.height;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.Tile::get_data_batch", (__argsBatch__, __methodResult__) -> {
                List<byte[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.Tile ref = (com.amap.api.maps.model.Tile) getHEAP().get((int) __args__.get("refId"));
            
                    byte[] __result__ = ref.data;
            
                    byte[] jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.GroundOverlayOptions::get_NO_DIMENSION_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.GroundOverlayOptions ref = (com.amap.api.maps.model.GroundOverlayOptions) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.NO_DIMENSION;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_target_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLng __result__ = ref.target;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_zoom_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.zoom;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_tilt_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.tilt;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_bearing_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
                    float __result__ = ref.bearing;
            
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.CameraPosition::get_isAbroad_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.CameraPosition ref = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.isAbroad;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.HeatmapTileProvider::get_DEFAULT_GRADIENT_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.HeatmapTileProvider ref = (com.amap.api.maps.model.HeatmapTileProvider) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.Gradient __result__ = ref.DEFAULT_GRADIENT;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.LatLngBounds::get_southwest_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.LatLngBounds ref = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLng __result__ = ref.southwest;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.LatLngBounds::get_northeast_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.LatLngBounds ref = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLng __result__ = ref.northeast;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.LatLng::get_latitude_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.LatLng ref = (com.amap.api.maps.model.LatLng) getHEAP().get((int) __args__.get("refId"));
            
                    double __result__ = ref.latitude;
            
                    double jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.LatLng::get_longitude_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.LatLng ref = (com.amap.api.maps.model.LatLng) getHEAP().get((int) __args__.get("refId"));
            
                    double __result__ = ref.longitude;
            
                    double jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_offsetX_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.offsetX;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_offsetY_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.offsetY;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_minX_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.minX;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_maxX_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.maxX;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_minY_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.minY;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.TileProjection::get_maxY_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.TileProjection ref = (com.amap.api.maps.model.TileProjection) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.maxY;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.WeightedLatLng::get_intensity_batch", (__argsBatch__, __methodResult__) -> {
                List<Double> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.WeightedLatLng ref = (com.amap.api.maps.model.WeightedLatLng) getHEAP().get((int) __args__.get("refId"));
            
                    double __result__ = ref.intensity;
            
                    double jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.WeightedLatLng::get_latLng_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.WeightedLatLng ref = (com.amap.api.maps.model.WeightedLatLng) getHEAP().get((int) __args__.get("refId"));
            
                    com.amap.api.maps.model.LatLng __result__ = ref.latLng;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_activeFloorName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.activeFloorName;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_activeFloorIndex_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.activeFloorIndex;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_poiid_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.poiid;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_floor_indexs_batch", (__argsBatch__, __methodResult__) -> {
                List<int[]> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
                    int[] __result__ = ref.floor_indexs;
            
                    int[] jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("com.amap.api.maps.model.IndoorBuildingInfo::get_floor_names_batch", (__argsBatch__, __methodResult__) -> {
                List<List<String>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) __args__.get("refId"));
            
                    String[] __result__ = ref.floor_names;
            
                    List<String> jsonableResult = new ArrayList<String>(java.util.Arrays.asList(__result__));
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // setter
            put("com.amap.api.maps.MapsInitializer::set_sdcardDir", (__args__, __methodResult__) -> {
                // jsonable arg
                String sdcardDir = (String) ((Map<String, Object>) __args__).get("sdcardDir");
            
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.MapsInitializer ref = (com.amap.api.maps.MapsInitializer) getHEAP().get(refId);
            
                ref.sdcardDir = sdcardDir;
                __methodResult__.success("success");
            });
            // setter
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_activeFloorName", (__args__, __methodResult__) -> {
                // jsonable arg
                String activeFloorName = (String) ((Map<String, Object>) __args__).get("activeFloorName");
            
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                ref.activeFloorName = activeFloorName;
                __methodResult__.success("success");
            });
            // setter
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_activeFloorIndex", (__args__, __methodResult__) -> {
                // jsonable arg
                int activeFloorIndex = (int) ((Map<String, Object>) __args__).get("activeFloorIndex");
            
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                ref.activeFloorIndex = activeFloorIndex;
                __methodResult__.success("success");
            });
            // setter
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_poiid", (__args__, __methodResult__) -> {
                // jsonable arg
                String poiid = (String) ((Map<String, Object>) __args__).get("poiid");
            
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                ref.poiid = poiid;
                __methodResult__.success("success");
            });
            // setter
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_floor_indexs", (__args__, __methodResult__) -> {
                // jsonable arg
                int[] floor_indexs = (int[]) ((Map<String, Object>) __args__).get("floor_indexs");
            
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                ref.floor_indexs = floor_indexs;
                __methodResult__.success("success");
            });
            // setter
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_floor_names", (__args__, __methodResult__) -> {
                // jsonable arg
                ArrayList<String> floor_names = (ArrayList<String>) ((Map<String, Object>) __args__).get("floor_names");
            
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                ref.floor_names = floor_names.toArray(new String[floor_names.size()]);
                __methodResult__.success("success");
            });
            // setter batch
            put("com.amap.api.maps.MapsInitializer::set_sdcardDir_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // jsonable arg
                    String sdcardDir = (String) ((Map<String, Object>) __args__).get("sdcardDir");
            
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.maps.MapsInitializer ref = (com.amap.api.maps.MapsInitializer) getHEAP().get(refId);
            
                    ref.sdcardDir = sdcardDir;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_activeFloorName_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // jsonable arg
                    String activeFloorName = (String) ((Map<String, Object>) __args__).get("activeFloorName");
            
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                    ref.activeFloorName = activeFloorName;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_activeFloorIndex_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // jsonable arg
                    int activeFloorIndex = (int) ((Map<String, Object>) __args__).get("activeFloorIndex");
            
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                    ref.activeFloorIndex = activeFloorIndex;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_poiid_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // jsonable arg
                    String poiid = (String) ((Map<String, Object>) __args__).get("poiid");
            
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                    ref.poiid = poiid;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_floor_indexs_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // jsonable arg
                    int[] floor_indexs = (int[]) ((Map<String, Object>) __args__).get("floor_indexs");
            
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                    ref.floor_indexs = floor_indexs;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.amap.api.maps.model.IndoorBuildingInfo::set_floor_names_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // jsonable arg
                    ArrayList<String> floor_names = (ArrayList<String>) ((Map<String, Object>) __args__).get("floor_names");
            
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.maps.model.IndoorBuildingInfo ref = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(refId);
            
                    ref.floor_names = floor_names.toArray(new String[floor_names.size()]);
                }
            
                __methodResult__.success("success");
            });
            // method
            put("com.amap.api.offlineservice.AMapPermissionActivity::onRequestPermissionsResult", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                ArrayList<String> var2 = (ArrayList<String>) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.offlineservice.AMapPermissionActivity ref = (com.amap.api.offlineservice.AMapPermissionActivity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.offlineservice.AMapPermissionActivity@" + refId + "::onRequestPermissionsResult(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.onRequestPermissionsResult(var1, var2.toArray(new String[var2.size()]), var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setScaleControlsEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setScaleControlsEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setScaleControlsEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setZoomControlsEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setZoomControlsEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZoomControlsEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setCompassEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setCompassEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCompassEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setMyLocationButtonEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setMyLocationButtonEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationButtonEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setScrollGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setScrollGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setScrollGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setZoomGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setZoomGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZoomGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setTiltGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setTiltGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTiltGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setRotateGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setRotateGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRotateGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setAllGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setAllGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAllGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setLogoPosition", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setLogoPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLogoPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setZoomPosition", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setZoomPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZoomPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::getZoomPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::getZoomPosition(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getZoomPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isScaleControlsEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isScaleControlsEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isScaleControlsEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isZoomControlsEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isZoomControlsEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isZoomControlsEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isCompassEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isCompassEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isCompassEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isMyLocationButtonEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isMyLocationButtonEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isMyLocationButtonEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isScrollGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isScrollGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isScrollGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isZoomGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isZoomGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isZoomGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isTiltGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isTiltGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isTiltGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isRotateGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isRotateGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isRotateGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::getLogoPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::getLogoPosition(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getLogoPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isIndoorSwitchEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isIndoorSwitchEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isIndoorSwitchEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setIndoorSwitchEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setIndoorSwitchEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setIndoorSwitchEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setLogoMarginRate", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setLogoMarginRate(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLogoMarginRate(var1, new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::getLogoMarginRate", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::getLogoMarginRate(" + var1 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getLogoMarginRate(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setLogoLeftMargin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setLogoLeftMargin(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLogoLeftMargin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setLogoBottomMargin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setLogoBottomMargin(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLogoBottomMargin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setZoomInByScreenCenter", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setZoomInByScreenCenter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZoomInByScreenCenter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setGestureScaleByMapCenter", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setGestureScaleByMapCenter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setGestureScaleByMapCenter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isGestureScaleByMapCenter", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isGestureScaleByMapCenter(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isGestureScaleByMapCenter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.SwipeDismissTouchListener::onTouch", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.view.View var1 = __var1RefId__ != null ? (android.view.View) getHEAP().get(__var1RefId__) : null;
                // ref arg
                Integer __var2RefId__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                android.view.MotionEvent var2 = __var2RefId__ != null ? (android.view.MotionEvent) getHEAP().get(__var2RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.SwipeDismissTouchListener ref = (com.amap.api.maps.SwipeDismissTouchListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.SwipeDismissTouchListener@" + refId + "::onTouch(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.onTouch(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::setInfoWindowUpdateTime", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::setInfoWindowUpdateTime(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowUpdateTime(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::getInfoWindowUpdateTime", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::getInfoWindowUpdateTime(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getInfoWindowUpdateTime();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::setInfoWindowType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::setInfoWindowType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::getInfoWindowType", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::getInfoWindowType(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getInfoWindowType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::getInfoWindow", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::getInfoWindow(" + "" + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoWindow();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::setInfoContent", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.view.View var1 = __var1RefId__ != null ? (android.view.View) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::setInfoContent(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoContent(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::setInfoWindow", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.view.View var1 = __var1RefId__ != null ? (android.view.View) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::setInfoWindow(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindow(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::getInfoContents", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::getInfoContents(" + "" + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoContents();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomIn", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomIn(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomIn();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomOut", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomOut(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomOut();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::scrollBy", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::scrollBy(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.scrollBy(new Double(var0).floatValue(), new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomTo", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomTo(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomTo(new Double(var0).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomBy__double", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomBy(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomBy(new Double(var0).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomBy__double__android_graphics_Point", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.graphics.Point var1 = __var1RefId__ != null ? (android.graphics.Point) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomBy(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomBy(new Double(var0).floatValue(), var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newCameraPosition", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.CameraPosition var0 = __var0RefId__ != null ? (com.amap.api.maps.model.CameraPosition) getHEAP().get(__var0RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newCameraPosition(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newCameraPosition(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLng", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.LatLng var0 = __var0RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var0RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLng(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLng(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLngZoom", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.LatLng var0 = __var0RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLngZoom(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLngZoom(var0, new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLngBounds__com_amap_api_maps_model_LatLngBounds__int", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.LatLngBounds var0 = __var0RefId__ != null ? (com.amap.api.maps.model.LatLngBounds) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLngBounds(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLngBounds(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::changeLatLng", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.LatLng var0 = __var0RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var0RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::changeLatLng(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.changeLatLng(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLngBounds__com_amap_api_maps_model_LatLngBounds__int__int__int", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.LatLngBounds var0 = __var0RefId__ != null ? (com.amap.api.maps.model.LatLngBounds) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLngBounds(" + var0 + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLngBounds(var0, var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLngBoundsRect", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.LatLngBounds var0 = __var0RefId__ != null ? (com.amap.api.maps.model.LatLngBounds) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLngBoundsRect(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLngBoundsRect(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapException::getErrorMessage", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapException ref = (com.amap.api.maps.AMapException) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapException@" + refId + "::getErrorMessage(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getErrorMessage();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::logoPosition", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::logoPosition(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.logoPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::zOrderOnTop", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::zOrderOnTop(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.zOrderOnTop(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::mapType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::mapType(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.mapType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::camera", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.CameraPosition var1 = __var1RefId__ != null ? (com.amap.api.maps.model.CameraPosition) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::camera(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.camera(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::scaleControlsEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::scaleControlsEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.scaleControlsEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::zoomControlsEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::zoomControlsEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.zoomControlsEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::compassEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::compassEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.compassEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::scrollGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::scrollGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.scrollGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::zoomGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::zoomGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.zoomGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::tiltGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::tiltGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.tiltGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::rotateGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::rotateGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.rotateGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getLogoPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getLogoPosition(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getLogoPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getZOrderOnTop", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getZOrderOnTop(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getZOrderOnTop();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getMapType", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getMapType(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getMapType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getCamera", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getCamera(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.CameraPosition __result__;
                try {
                    __result__ = ref.getCamera();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getScaleControlsEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getScaleControlsEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getScaleControlsEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getZoomControlsEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getZoomControlsEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getZoomControlsEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getCompassEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getCompassEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getCompassEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getScrollGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getScrollGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getScrollGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getZoomGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getZoomGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getZoomGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getTiltGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getTiltGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getTiltGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getRotateGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getRotateGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getRotateGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CoordinateConverter::from", (__args__, __methodResult__) -> {
                // args
                // enum arg
                com.amap.api.maps.CoordinateConverter.CoordType var1 = com.amap.api.maps.CoordinateConverter.CoordType.values()[(int) ((Map<String, Object>) __args__).get("var1")];
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.CoordinateConverter ref = (com.amap.api.maps.CoordinateConverter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CoordinateConverter@" + refId + "::from(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CoordinateConverter __result__;
                try {
                    __result__ = ref.from(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CoordinateConverter::coord", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.LatLng var1 = __var1RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.CoordinateConverter ref = (com.amap.api.maps.CoordinateConverter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CoordinateConverter@" + refId + "::coord(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CoordinateConverter __result__;
                try {
                    __result__ = ref.coord(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CoordinateConverter::convert", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.CoordinateConverter ref = (com.amap.api.maps.CoordinateConverter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CoordinateConverter@" + refId + "::convert(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.convert();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CoordinateConverter::isAMapDataAvailable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                double var0 = (double) ((Map<String, Object>) __args__).get("var0");
                // jsonable arg
                double var2 = (double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CoordinateConverter::isAMapDataAvailable(" + var0 + var2 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = com.amap.api.maps.CoordinateConverter.isAMapDataAvailable(var0, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap.InfoWindowAdapter::getInfoWindow", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.Marker var1 = __var1RefId__ != null ? (com.amap.api.maps.model.Marker) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap.InfoWindowAdapter ref = (com.amap.api.maps.AMap.InfoWindowAdapter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap.InfoWindowAdapter@" + refId + "::getInfoWindow(" + var1 + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoWindow(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap.InfoWindowAdapter::getInfoContents", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.Marker var1 = __var1RefId__ != null ? (com.amap.api.maps.model.Marker) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap.InfoWindowAdapter ref = (com.amap.api.maps.AMap.InfoWindowAdapter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap.InfoWindowAdapter@" + refId + "::getInfoContents(" + var1 + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoContents(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap.ImageInfoWindowAdapter::getInfoWindowUpdateTime", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap.ImageInfoWindowAdapter ref = (com.amap.api.maps.AMap.ImageInfoWindowAdapter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap.ImageInfoWindowAdapter@" + refId + "::getInfoWindowUpdateTime(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getInfoWindowUpdateTime();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setPoints", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.maps.model.LatLng> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.LatLng>) var1).add((com.amap.api.maps.model.LatLng) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setPoints(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPoints((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::resetIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::resetIndex(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.resetIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setTotalDuration", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setTotalDuration(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTotalDuration(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::startSmoothMove", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::startSmoothMove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.startSmoothMove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::stopMove", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::stopMove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopMove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::getObject", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::getObject(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.BasePointOverlay __result__;
                try {
                    __result__ = ref.getObject();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::getPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::getPosition(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.getPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::getIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::getIndex(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::removeMarker", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::removeMarker(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removeMarker();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setPosition", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.LatLng var1 = __var1RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setRotate", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setRotate(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRotate(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setVisible", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setVisible(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setMoveListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setMoveListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setMoveListener(new com.amap.api.maps.utils.overlay.MovingPointOverlay.MoveListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.utils.overlay.MovingPointOverlay::setMoveListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void move(double var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: move(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            double argvar1 = var1;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.utils.overlay.MovingPointOverlay.MoveListener::move",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setPoints", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.maps.model.LatLng> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.LatLng>) var1).add((com.amap.api.maps.model.LatLng) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setPoints(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPoints((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setTotalDuration", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setTotalDuration(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTotalDuration(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::startSmoothMove", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::startSmoothMove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.startSmoothMove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
        }};
    }
}
